{"version":3,"sources":["actions/projectActions.js","actions/types.js","components/project/ProjectItem.js","components/project/CreateProjectButton.js","components/DashBoard.js","securityutils/setJwtToken.js","actions/SecurityActions.js","components/layout/Header.js","components/project/AddProject.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/project/updateProject.js","components/ProjectBoard/ProjectTask/ProjectTask.js","actions/backlogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","components/ProjectBoard/ProjectTask/AddProjectTask.js","components/ProjectBoard/ProjectTask/UpdateProjectTask.js","components/layout/Landing.js","components/userManagement/SignUp.js","components/userManagement/SignIn.js","securityutils/SecuredRoute.js","App.js","serviceWorker.js","index.js"],"names":["createProject","project","history","dispatch","a","axios","post","push","type","payload","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","className","projectIdentifier","projectName","projectDescription","to","onClick","bind","Component","propTpes","PropTypes","func","isRequired","connect","window","confirm","delete","CreateProjectButton","Fragment","DashBoard","getProjects","projects","map","key","object","state","get","res","setJwtToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","location","href","headerLinks","security","validToken","user","userIsAuthenticated","fullName","userIsNotAuthenticated","data-toggle","data-target","AddProject","startDate","endDate","errors","onChange","onSubmit","nextProps","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","initialState","project_tasks","project_task","booleanActionPayload","combineReducers","actions","action","filter","backlog","projectSequence","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","updateProject","match","params","getProject","disabled","alert","ProjectTask","backlog_id","pt_sequence","deleteProjectTask","priorityString","priorityClass","priority","summary","acceptanceCriteria","Backlog","tasks","pendingItems","inProgressItems","doneItems","iterator","length","status","ProjectBoard","getBacklog","boardContent","projectNotFound","role","boardLogic","AddProjectTask","dueDate","newProjectTask","addProjectTask","UpdateProjectTask","createdAt","updateProjectTask","getProjectTask","patch","Landing","SignUp","newUser","username","password","confirmPassword","createNewUser","SignIn","loggedRequest","login","loginRequest","console","log","setItem","decoded","jwt_decode","component","otherProps","render","JwtToken","decoded_token","currentTime","Date","now","exp","App","exact","path","Boolean","hostname","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7d763405.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {GET_ERRORS, GET_PROJECT, DELETE_PROJECT, GET_PROJECTS} from \"./types\";\r\n\r\n\r\n\r\n\r\nexport const createProject = (project, history) => async dispatch => {\r\n    try{\r\n          await axios.post(\"/api/project\", project)\r\n        history.push(\"/dashboard\");\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n          });\r\n    }catch (err) {\r\n        dispatch({\r\n          type: GET_ERRORS,\r\n          payload: err.response.data\r\n        });\r\n    }\r\n}\r\n\r\nexport const getProjects = () => async dispatch => {\r\n    const res = await axios.get(\"/api/project/all\")\r\n    dispatch({\r\n        type: GET_PROJECTS,\r\n        payload: res.data\r\n    });\r\n}\r\n\r\nexport const getProject = (id, history) => async dispatch => {\r\n\r\n    try{\r\n        const res = await axios.get(`/api/project/${id}`);\r\n        dispatch({\r\n            type: GET_PROJECT,\r\n            payload: res.data\r\n        });\r\n\r\n    }catch(err){\r\n        alert(\"project with projectIdentifier: \" + id + \" does not exist, you will be redirected to your dash board\")\r\n        history.push(\"/dashboard\");\r\n    }\r\n}\r\n\r\nexport const deleteProject = id => async dispatch =>{\r\n    if(window.confirm(\"Are you sure you want to delete this project? It will delete all data related to it\")){\r\n        await axios.delete(`/api/project/${id}`);\r\n    dispatch({\r\n        type: DELETE_PROJECT,\r\n        payload: id\r\n    });\r\n    }\r\n    \r\n}","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n//types for backlog actions\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";","import React, { Component } from 'react'\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {deleteProject} from \"../../actions/projectActions\"\r\n\r\nclass ProjectItem extends Component {\r\n\r\n    onDeleteClick = id =>{\r\n        this.props.deleteProject(id)\r\n    }\r\n    render() {\r\n        const {project} = this.props\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"card card-body bg-light mb-3\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-2\">\r\n                            <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n                        </div>\r\n                        <div className=\"col-lg-6 col-md-4 col-8\">\r\n                            <h3>{project.projectName}</h3>\r\n                            <p>{project.projectDescription}</p>\r\n                        </div>\r\n                        <div className=\"col-md-4 d-none d-lg-block\">\r\n                            <ul className=\"list-group\">\r\n                                <Link to = {`/projectBoard/${project.projectIdentifier}`}>\r\n                                    <li className=\"list-group-item board\">\r\n                                        <i className=\"fa fa-flag-checkered pr-1\">  Project Board </i>\r\n                                    </li>\r\n                                </Link>\r\n                                <Link to = {`/updateproject/${project.projectIdentifier}`}>\r\n                                    <li className=\"list-group-item update\">\r\n                                        <i className=\"fa fa-edit pr-1\">  Update Project Info</i>\r\n                                    </li>\r\n                                </Link>\r\n                               \r\n                                    <li className=\"list-group-item delete\" onClick = {this.onDeleteClick.bind(this, project.projectIdentifier)}>\r\n                                        <i className=\"fa fa-minus-circle pr-1\">  Delete Project</i>\r\n                                    </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectItem.propTpes = {\r\n    deleteProject: PropTypes.func.isRequired\r\n}\r\n\r\n\r\nexport default connect(null, {deleteProject}) (ProjectItem)","import React from 'react'\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst  CreateProjectButton = () => {\r\n    return (\r\n        <React.Fragment>\r\n        <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n                            Create a Project\r\n        </Link>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CreateProjectButton;\r\n","import React, { Component } from 'react'\r\nimport ProjectItem from './project/ProjectItem'\r\nimport CreateProjectButton from './project/CreateProjectButton'\r\nimport{connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport {getProjects} from \"../actions/projectActions\"\r\n\r\n\r\n class DashBoard extends Component {\r\n     componentDidMount(){\r\n         this.props.getProjects()\r\n     }\r\n    render() {\r\n        const {projects} = this.props.project;\r\n        return (\r\n            \r\n            <div className=\"projects\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12\">\r\n                        <h1 className=\"display-4 text-center\">Projects</h1>\r\n                        <br />\r\n                        <CreateProjectButton/>\r\n                        <br />\r\n                        <hr />\r\n                        {\r\n                            projects.map(project=>(\r\n                                <ProjectItem key = {project.id}    project = {project}/>\r\n                            ))\r\n                        }\r\n    \r\n                      \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nDashBoard.propTpes = {\r\n    project: PropTypes.object.isRequired,\r\n    getProjects: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    project: state.project\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProjects})(DashBoard);","import axios from \"axios\";\r\n\r\nconst setJwtToken = token =>{\r\n    if (token) {\r\n        axios.defaults.headers.common[\"Authorization\"] = token;\r\n      } else {\r\n        delete axios.defaults.headers.common[\"Authorization\"];\r\n      }\r\n}\r\n\r\nexport default setJwtToken;","import axios from \"axios\";\r\nimport {SET_CURRENT_USER, GET_ERRORS} from \"./types\";\r\nimport setJwtToken from \"../securityutils/setJwtToken\";\r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createNewUser = (newUser, history) => async dispatch => {\r\n    try {\r\n        await axios.post(\"api/users/register\", newUser);\r\n        history.push(\"/signin\");\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n          });\r\n        \r\n    } catch (error) {\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n          });\r\n        \r\n    }\r\n\r\n}\r\n\r\nexport const login = loginRequest => async dispatch => {\r\n\r\n    try{\r\n \r\n        //post to login\r\n        const res = await axios.post(\"api/users/login\", loginRequest);\r\n        //extract token\r\n        const {token} = res.data;\r\n        console.log(token)\r\n        //store token in local storage\r\n        localStorage.setItem(\"JwtToken\", token);\r\n        //set token in header\r\n        setJwtToken(token);\r\n        //decode token on react\r\n        const decoded = jwt_decode(token);\r\n        //dispatch to security reducer\r\n        dispatch({\r\n            type: SET_CURRENT_USER,\r\n            payload: decoded\r\n          });\r\n    } catch(err)\r\n    {\r\n        console.log(err.response.data)\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n          });\r\n    }\r\n}\r\n\r\nexport const logout = () => dispatch =>{\r\n    localStorage.removeItem(\"JwtToken\");\r\n    setJwtToken(false);\r\n    dispatch({\r\n        type: SET_CURRENT_USER,\r\n        payload: {}\r\n      });\r\n}","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../actions/SecurityActions\";\r\n\r\n class Header extends Component {\r\n\r\n     logout(){\r\n         this.props.logout();\r\n         window.location.href =\"/\";\r\n     }\r\n    render() {\r\n        const {validToken, user} = this.props.security;\r\n        const userIsAuthenticated = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to =\"/dashboard\">\r\n                        Dashboard\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link \" to=\"/dashboard\">\r\n                     <i className =\"fas fa-user-circle mr-1\"/> {user.fullName}\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link className=\"nav-link\" to=\"/logout\" onClick = {this.logout.bind(this)}>\r\n                        Logout \r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        );\r\n\r\n        const userIsNotAuthenticated = (\r\n            <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n    \r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link \" to=\"/signup\">\r\n                                Sign Up\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/signin\">\r\n                                Login\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n        )\r\n\r\n        let headerLinks;\r\n\r\n      if(validToken && user){\r\n          headerLinks = userIsAuthenticated;\r\n      } else{\r\n          headerLinks = userIsNotAuthenticated;\r\n      } \r\n\r\n        return (\r\n            <div>\r\n            <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n            <div className=\"container\">\r\n                <Link className=\"navbar-brand\" to =\"/\">\r\n                    PPMT\r\n                </Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n            {headerLinks}\r\n                \r\n            </div>\r\n        </nav> \r\n            </div>\r\n        )\r\n    }\r\n}\r\nHeader.propTypes = {\r\n    logout: PropTypes.func.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps = state =>({\r\n    security: state.security\r\n})\r\n\r\nexport default connect (mapStateToProps, {logout}) (Header);\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {createProject} from \"../../actions/projectActions\";  \r\nimport classnames from \"classnames\";\r\n\r\n\r\n class AddProject extends Component {\r\n     constructor (){\r\n         super()\r\n         this.state= {\r\n             projectName:\"\",\r\n             projectIdentifier:\"\",\r\n             projectDescription:\"\",\r\n             startDate:\"\",\r\n             endDate:\"\",\r\n             errors:{}\r\n         };\r\n\r\n         this.onChange = this.onChange.bind(this);\r\n         this.onSubmit = this.onSubmit.bind(this);\r\n     }\r\n     //lifecycle method\r\n     componentWillReceiveProps(nextProps){\r\n            if(nextProps.errors){\r\n                this.setState({errors: nextProps.errors})\r\n            }\r\n     }\r\n\r\n     onChange(e){\r\n         this.setState({[e.target.name]:e.target.value})\r\n     }\r\n\r\n     onSubmit(e){\r\n         e.preventDefault();\r\n\r\n         const newProject = {\r\n            projectName:this.state.projectName,\r\n            projectIdentifier:this.state.projectIdentifier,\r\n            projectDescription:this.state.projectDescription,\r\n            startDate:this.state.startDate,\r\n            endDate:this.state.endDate\r\n         }\r\n         this.props.createProject(newProject, this.props.history)\r\n     }\r\n    render() {\r\n        const {errors} = this.state;\r\n        return (\r\n            <div className=\"project\">\r\n            \r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <h5 className=\"display-4 text-center\">Create Project</h5>\r\n                    <hr />\r\n                    <form onSubmit = {this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className={classnames(\"form-control form-control-lg \", {\"is-invalid\":errors.projectName})} placeholder=\"Project Name\" name=\"projectName\" value ={this.state.projectName}\r\n                            onChange = {this.onChange}/>\r\n                            {errors.projectName && <div className=\"invalid-feedback\">{errors.projectName}</div>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className = {classnames(\"form-control form-control-lg \", {\"is-invalid\":errors.projectIdentifier})} placeholder=\"Unique Project ID\" name=\"projectIdentifier\" value={this.state.projectIdentifier}\r\n                            onChange = {this.onChange}/>\r\n                            {errors.projectIdentifier && <div className=\"invalid-feedback\">{errors.projectIdentifier}</div>}\r\n                        </div>\r\n                       \r\n                        <div className=\"form-group\">\r\n                            <textarea className={classnames(\"form-control form-control-lg \", {\"is-invalid\":errors.projectDescription})} placeholder=\"Project Description\" name=\"projectDescription\" value ={this.state.projectDescription}\r\n                            onChange = {this.onChange}></textarea>\r\n                            {errors.projectDescription && <div className=\"invalid-feedback\">{errors.projectDescription}</div>}\r\n                        </div>\r\n                        <h6>Start Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" className=\"form-control form-control-lg\" name=\"startDate\" value ={this.state.startDate} \r\n                            onChange = {this.onChange}/>\r\n                        </div>\r\n                        <h6>Estimated End Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" className=\"form-control form-control-lg\" name=\"endDate\" value = {this.state.endDate} \r\n                            onChange = {this.onChange}/>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nAddProject.propTypes = {\r\n    createProject: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    createProject\r\n}) (AddProject);\r\n","import {GET_ERRORS} from '../actions/types'\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, actions){\r\n    switch(actions.type){\r\n\r\n        case GET_ERRORS:\r\n            return actions.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","import {GET_PROJECTS, GET_PROJECT, DELETE_PROJECT} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    projects: [],\r\n    project: {}\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_PROJECTS:\r\n            return {\r\n                ...state,\r\n                projects: action.payload\r\n            };\r\n        case GET_PROJECT:\r\n            return{\r\n                ...state,\r\n                project: action.payload\r\n            };\r\n        case DELETE_PROJECT:\r\n            return {\r\n                ...state,\r\n                projects: state.projects.filter(\r\n                    project => project.projectIdentifier !== action.payload)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    project_tasks: [],\r\n    project_task: {}\r\n};\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case GET_BACKLOG:\r\n            return {\r\n                ...state,\r\n                project_tasks: action.payload\r\n            };\r\n        case GET_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                project_task: action.payload\r\n            };  \r\n\r\n        case DELETE_PROJECT_TASK:\r\n            return {\r\n                ...state,\r\n                project_tasks: state.project_tasks.filter(\r\n                    project_task => project_task.projectSequence !== action.payload)\r\n            };\r\n\r\n\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}","import {SET_CURRENT_USER} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    user: {},\r\n    validToken: false\r\n}\r\n\r\nconst booleanActionPayload = (payload) =>{\r\n    if(payload){\r\n        return true;\r\n    }else{\r\n        return false;\r\n    }\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    switch(action.type){\r\n        case SET_CURRENT_USER:\r\n            return{\r\n                ...state,\r\n                validToken: booleanActionPayload(action.payload),\r\n                user: action.payload\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport errorReducer from './errorReducer';\r\nimport projectReducer from './projectReducer';\r\nimport backlogReducer from './backlogReducer';\r\nimport securityReducer from \"./securityReducer\";\r\n\r\nexport default combineReducers({\r\n    errors: errorReducer,\r\n    project: projectReducer ,\r\n    backlog: backlogReducer,\r\n    security: securityReducer\r\n});","import {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from \"./reducers\"\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n    store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware), \r\n    ReactReduxDevTools\r\n    ));\r\n    \r\n} else {\r\n    store = createStore(rootReducer, initialState, compose(applyMiddleware(...middleware)));\r\n    \r\n}\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport {getProject, createProject} from \"../../actions/projectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\n class updateProject extends Component {\r\n    constructor (){\r\n        super()\r\n        this.state= {\r\n            id:\"\",\r\n            projectName:\"\",\r\n            projectIdentifier:\"\",\r\n            projectDescription:\"\",\r\n            startDate:\"\",\r\n            endDate:\"\",\r\n            errors:{}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors: nextProps.errors})\r\n        }\r\n\r\n        const {id,\r\n        projectName,\r\n        projectIdentifier,\r\n        projectDescription,\r\n        startDate,\r\n        endDate} = nextProps.project;\r\n\r\n        this.setState({\r\n            id,\r\n        projectName,\r\n        projectIdentifier,\r\n        projectDescription,\r\n        startDate,\r\n        endDate\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n        this.props.getProject(id, this.props.history);\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const updateProject = {\r\n            id: this.state.id,\r\n           projectName:this.state.projectName,\r\n           projectIdentifier:this.state.projectIdentifier,\r\n           projectDescription:this.state.projectDescription,\r\n           startDate:this.state.startDate,\r\n           endDate:this.state.endDate\r\n        }\r\n        this.props.createProject(updateProject, this.props.history)\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.state;\r\n        return (\r\n            <div className=\"register\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <h5 className=\"display-4 text-center\">Update Project</h5>\r\n                    <hr />\r\n                    <form onSubmit = {this.onSubmit}>\r\n                        <div className=\"form-group\" >\r\n                            <input type=\"text\" className={classnames(\"form-control form-control-lg \", {\"is-invalid\":errors.projectName})} placeholder=\"Project Name\" name=\"projectName\" \r\n                            value ={this.state.projectName}\r\n                            onChange = {this.onChange}\r\n                            />\r\n                            {errors.projectName && <div className=\"invalid-feedback\">{errors.projectName}</div>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className=\"form-control form-control-lg\" placeholder=\"Unique Project ID\" name =\"projectIdentifier\"\r\n                            value ={this.state.projectIdentifier}\r\n                            onChange = {this.onChange}\r\n                                disabled />\r\n                        </div>\r\n                        \r\n                        <div className=\"form-group\">\r\n                            <textarea className={classnames(\"form-control form-control-lg \", {\"is-invalid\":errors.projectDescription})} placeholder=\"Project Description\" name = \"projectDescription\"\r\n                            value ={this.state.projectDescription}\r\n                            onChange = {this.onChange}></textarea>\r\n                            {errors.projectName && <div className=\"invalid-feedback\">{errors.projectName}</div>}\r\n                        </div>\r\n                        <h6>Start Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" className=\"form-control form-control-lg\" name=\"startDate\" \r\n                            value ={this.state.startDate}\r\n                            onChange = {this.onChange}/>\r\n                        </div>\r\n                        <h6>Estimated End Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" className=\"form-control form-control-lg\" name=\"endDate\"\r\n                            value ={this.state.endDate} \r\n                            onChange = {this.onChange}/>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nupdateProject.propTypes = {\r\n    getProject: PropTypes.func.isRequired,\r\n    createProject: PropTypes.func.isRequired,\r\n    project: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    project: state.project.project,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, {getProject, createProject}) (updateProject);","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {deleteProjectTask} from \"../../../actions/backlogActions\"\r\n\r\n class ProjectTask extends Component {\r\n    onDeleteClick = (backlog_id, pt_sequence) =>{\r\n        this.props.deleteProjectTask(backlog_id, pt_sequence);\r\n    }\r\n    render() {\r\n        const {project_task} = this.props;\r\n        let priorityString;\r\n        let priorityClass;\r\n\r\n        if(project_task.priority === 1){\r\n            priorityClass = \"bg-danger text-light\";\r\n            priorityString = \"HIGH\";\r\n        }\r\n\r\n        if(project_task.priority === 2){\r\n            priorityClass = \"bg-warning text-light\";\r\n            priorityString = \"MEDIUM\";\r\n        }\r\n\r\n        if(project_task.priority === 3){\r\n            priorityClass = \"bg-info text-light\";\r\n            priorityString = \"LOW\";\r\n        }\r\n\r\n\r\n        return (\r\n                <div className=\"card mb-1 bg-light\">\r\n\r\n                    <div className={`card-header text-primary d-flex justify-content-between ${priorityClass}`}>\r\n                        <span>ID: {project_task.projectSequence}</span>\r\n                        <span>  -- Priority: {priorityString}</span> \r\n                    </div>\r\n                    <div className=\"card-body bg-light\">\r\n                        <h5 className=\"card-title\">{project_task.summary}</h5>\r\n                        <p className=\"card-text text-truncate \">\r\n                            {project_task.acceptanceCriteria}\r\n                        </p>\r\n                        <Link to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`} className=\"btn btn-primary\">\r\n                            View / Update\r\n                        </Link>\r\n\r\n                        <button className=\"btn btn-danger ml-4\" onClick = {this.onDeleteClick.bind(this, project_task.projectIdentifier, project_task.projectSequence)}>\r\n                            Delete\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectTask.propTpes = {\r\n    deleteProjectTask: PropTypes.func.isRequired\r\n}\r\nexport default connect(null, {deleteProjectTask}) (ProjectTask);\r\n","import axios from \"axios\";\r\nimport {GET_ERRORS, GET_BACKLOG, GET_PROJECT_TASK, DELETE_PROJECT_TASK} from \"./types\";\r\n\r\nexport const addProjectTask = (backlog_id,project_task, history) => async dispatch => {\r\n    try{\r\n        await axios.post(`/api/project-task/${backlog_id}`, project_task)\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: {}\r\n          });\r\n    }catch (error){\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: error.response.data\r\n          });\r\n\r\n    }\r\n};\r\n\r\nexport const getBacklog = backlog_id => async dispatch => {\r\n    try{\r\n        const res = await axios.get(`/api/project-task/${backlog_id}`);\r\n        dispatch({\r\n            type: GET_BACKLOG,\r\n            payload: res.data\r\n        });\r\n\r\n    }catch(err){\r\n        dispatch({\r\n            type: GET_ERRORS,\r\n            payload: err.response.data\r\n          });\r\n\r\n    }\r\n}\r\n\r\nexport const getProjectTask = (backlog_id, pt_sequence, history) => async dispatch =>{\r\n    try{\r\n     const res = await axios.get(`/api/project-task/${backlog_id}/${pt_sequence}`);\r\n     dispatch({\r\n        type: GET_PROJECT_TASK,\r\n        payload: res.data\r\n    }); \r\n    }catch (error){\r\n        alert(\"project with projectIdentifier: \" + backlog_id + \" or project task: \" + pt_sequence +  \" does not exist, you will be redirected to your project-board\")\r\n        history.push(`/projectBoard/${backlog_id}`);\r\n\r\n    }\r\n}\r\n \r\nexport const updateProjectTask = (backlog_id, pt_sequence, project_task,history ) => async dispatch => {\r\ntry {\r\n    await axios.patch(`/api/project-task/${backlog_id}/${pt_sequence}`, project_task);\r\n    history.push(`/projectBoard/${backlog_id}`)\r\n    dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {}\r\n      });\r\n    \r\n} catch (error) {\r\n    dispatch({\r\n        type: GET_ERRORS,\r\n        payload: error.response.data\r\n      });\r\n}\r\n}\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_sequence) => async dispatch =>{\r\n    if(window.confirm(\"Are you sure you want to delete this project? \" + pt_sequence + \" It will delete all data related to it\")){\r\n        await axios.delete(`/api/project-task/${backlog_id}/${pt_sequence}`);\r\n    dispatch({\r\n        type: DELETE_PROJECT_TASK,\r\n        payload: pt_sequence\r\n    });\r\n    }\r\n    \r\n}","import React, { Component } from 'react';\r\n\r\nimport ProjectTask from './ProjectTask/ProjectTask';\r\n\r\n class Backlog extends Component {\r\n    render() {\r\n        const {project_tasks} = this.props;\r\n\r\n        const tasks = project_tasks.map(project_task => (\r\n            <ProjectTask key = {project_task.id} project_task = {project_task}/>\r\n        ));\r\n\r\n        let pendingItems = [];\r\n        let inProgressItems = [];\r\n        let doneItems = [];\r\n\r\n        for(let iterator = 0; iterator< tasks.length; iterator++){\r\n            if(tasks[iterator].props.project_task.status === \"PENDING\"){\r\n                pendingItems.push(tasks[iterator]);\r\n            }\r\n            if(tasks[iterator].props.project_task.status === \"IN_PROGRESS\"){\r\n                inProgressItems.push(tasks[iterator]);\r\n            }\r\n            if(tasks[iterator].props.project_task.status === \"DONE\"){\r\n                doneItems.push(tasks[iterator]);\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-secondary text-white\">\r\n                            <h3>PENDING</h3>\r\n                        </div>\r\n                    </div>\r\n                    {pendingItems}\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-primary text-white\">\r\n                            <h3>In Progress</h3>\r\n                        </div>\r\n                    </div>\r\n                    {inProgressItems}\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card text-center mb-2\">\r\n                        <div className=\"card-header bg-success text-white\">\r\n                            <h3>Done</h3>\r\n                        </div>\r\n                    </div>\r\n                    {doneItems}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Backlog;","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\"\r\nimport Backlog from './Backlog';\r\nimport {connect} from 'react-redux';\r\nimport {getBacklog} from \"../../actions/backlogActions\"\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n class ProjectBoard extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            errors: {}\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        const {id} = this.props.match.params;\r\n        this.props.getBacklog(id)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors:nextProps.errors})\r\n        }\r\n    }\r\n    render() {\r\n        const {id} = this.props.match.params;\r\n        const {project_tasks} = this.props.backlog;\r\n\r\n        const {errors} = this.state;\r\n\r\n        let boardContent;\r\n\r\n        const boardLogic = (errors, project_tasks) =>{\r\n            if(project_tasks.length < 1){\r\n                if(errors.projectNotFound){\r\n                    return(\r\n                        <div className =\"alert alert-danger text-center\" role = \"alert\"> {errors.projectNotFound}</div>\r\n                    );\r\n                } else if(errors.projectIdentifier){\r\n                    return(\r\n                        <div className =\"alert alert-danger text-center\" role = \"alert\"> {errors.projectIdentifier}</div>\r\n                    );\r\n                }\r\n                else {\r\n                    return(\r\n                        <div className =\"alert alert-info text-center\" role = \"alert\"> No Project Tasks to display, create one</div>\r\n                    );\r\n                }\r\n            }else{\r\n                return <Backlog project_tasks = {project_tasks}/>;\r\n            }\r\n\r\n        }\r\n\r\n        boardContent = boardLogic(errors, project_tasks)\r\n        return (\r\n    <div className=\"container\">\r\n            <Link to= {`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n                <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n            </Link>\r\n            <br />\r\n            <hr />\r\n            {boardContent}\r\n        \r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nProjectBoard.propTpes = {\r\n    backlog: PropTypes.object.isRequired,\r\n    getBacklog: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    backlog: state.backlog,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, {getBacklog}) (ProjectBoard)","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport {addProjectTask} from '../../../actions/backlogActions'\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n class AddProjectTask extends Component {\r\n    constructor (props){\r\n        super(props)\r\n        const {id} = this.props.match.params;\r\n        this.state= {\r\n            summary:\"\",\r\n            acceptanceCriteria:\"\",\r\n            dueDate:\"\",\r\n            priority: 0,\r\n            status:\"\",\r\n            projectIdentifier: id,\r\n            errors:{}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    //lifecycle method\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors: nextProps.errors})\r\n        }\r\n } \r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const newProjectTask = {\r\n            summary:this.state.summary,\r\n            acceptanceCriteria:this.state.acceptanceCriteria,\r\n            dueDate:this.state.dueDate,\r\n            priority:this.state.priority,\r\n            status:this.state.status\r\n        }\r\n        this.props.addProjectTask(this.state.projectIdentifier,newProjectTask, this.props.history)\r\n    }\r\n    \r\n    render() {\r\n        const {id} = this.props.match.params;\r\n        const {errors} = this.state;\r\n        return (\r\n            <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <Link to = {`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                        Back to Project Board\r\n                    </Link>\r\n                    <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n                    <p className=\"lead text-center\">Project Name + Project Code</p>\r\n                    <form onSubmit = {this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className={classnames(\"form-control form-control-lg \", {\"is-invalid\":errors.summary})} name=\"summary\" placeholder=\"Project Task summary\" \r\n                            value ={this.state.summary}\r\n                            onChange = {this.onChange}/>\r\n                            {errors.summary && <div className=\"invalid-feedback\">{errors.summary}</div>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea className=\"form-control form-control-lg\" placeholder=\"Acceptance Criteria\" name=\"acceptanceCriteria\"\r\n                            value ={this.state.acceptanceCriteria}\r\n                            onChange = {this.onChange}></textarea>\r\n                        </div>\r\n                        <h6>Due Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" className=\"form-control form-control-lg\" name=\"dueDate\" \r\n                            value ={this.state.dueDate}\r\n                            onChange = {this.onChange}/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control form-control-lg\" name=\"priority\"\r\n                            value ={this.state.priority}\r\n                            onChange = {this.onChange}>\r\n                                <option value={0}>Select Priority</option>\r\n                                <option value={1}>High</option>\r\n                                <option value={2}>Medium</option>\r\n                                <option value={3}>Low</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control form-control-lg\" name=\"status\"\r\n                            value ={this.state.status}\r\n                            onChange = {this.onChange}>\r\n                                <option value=\"\">Select Status</option>\r\n                                <option value=\"PENDING\">PENDING</option>\r\n                                <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                <option value=\"DONE\">DONE</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddProjectTask.propTpes = {\r\n    addProjectTask: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    errors: state.errors,\r\n    \r\n})\r\nexport default connect(mapStateToProps, {\r\n    addProjectTask\r\n}) (AddProjectTask);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport {getProjectTask, updateProjectTask} from \"../../../actions/backlogActions\"\r\n\r\nclass UpdateProjectTask extends Component {\r\n    constructor (){\r\n        super()\r\n        this.state= {\r\n            \"id\": \"\",\r\n            \"projectSequence\": \"\",\r\n            \"summary\": \"\",\r\n            \"acceptanceCriteria\": \"\",\r\n            \"priority\": \"\",\r\n            \"dueDate\": \"\",\r\n            \"createdAt\": \"\",\r\n            \"projectIdentifier\": \"\",\r\n            \"status\": \"\",\r\n            errors:{}\r\n        };\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors: nextProps.errors})\r\n        }\r\n\r\n        const {\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            priority,\r\n            dueDate,\r\n            createdAt,\r\n            projectIdentifier,\r\n            status\r\n    } = nextProps.project_task;\r\n\r\n         this.setState({\r\n            id,\r\n            projectSequence,\r\n            summary,\r\n            acceptanceCriteria,\r\n            priority,\r\n            dueDate,\r\n            createdAt,\r\n            projectIdentifier,\r\n            status\r\n        })\r\n    }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const updateProjectTask = {\r\n            id: this.state.id,\r\n            projectSequence: this.state.projectSequence,\r\n            summary: this.state.summary,\r\n            acceptanceCriteria: this.state.acceptanceCriteria,\r\n            priority: this.state.priority,\r\n            dueDate: this.state.dueDate,\r\n            createdAt: this.state.createdAt,\r\n            projectIdentifier: this.state.projectIdentifier,\r\n            status: this.state.status\r\n        }\r\n        this.props.updateProjectTask(this.state.projectIdentifier, this.state.projectSequence, updateProjectTask, this.props.history)\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {backlog_id , pt_sequence} = this.props.match.params;\r\n        this.props.getProjectTask(backlog_id, pt_sequence, this.props.history);\r\n    }\r\n    render() {\r\n        const {errors} = this.state;\r\n        return (\r\n            <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <Link to = {`/projectBoard/${this.state.projectIdentifier}/${this.state.projectSequence}`} className=\"btn btn-light\">\r\n                        Back to Project Board\r\n                    </Link>\r\n                    <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n                    <p className=\"lead text-center\">Project Name: {this.state.projectIdentifier} | Project Task ID:{\" \"}{this.state.projectSequence}{\" \"}</p>\r\n                    <form onSubmit={this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className = {classnames(\"form-control form-control-lg \", {\"is-invalid\":errors.summary})} name=\"summary\" placeholder=\"Project Task summary\" \r\n                            value ={this.state.summary}\r\n                            onChange = {this.onChange}/>\r\n                            {errors.summary && <div className=\"invalid-feedback\">{errors.summary}</div>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <textarea className=\"form-control form-control-lg\" placeholder=\"Acceptance Criteria\" name=\"acceptanceCriteria\"\r\n                            value ={this.state.acceptanceCriteria}\r\n                            onChange = {this.onChange}></textarea>\r\n                        </div>\r\n                        <h6>Due Date</h6>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"date\" className=\"form-control form-control-lg\" name=\"dueDate\" \r\n                            value ={this.state.dueDate}\r\n                            onChange = {this.onChange}/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control form-control-lg\" name=\"priority\"\r\n                            value ={this.state.priority}\r\n                            onChange = {this.onChange}>\r\n                                <option value={0}>Select Priority</option>\r\n                                <option value={1}>High</option>\r\n                                <option value={2}>Medium</option>\r\n                                <option value={3}>Low</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <select className=\"form-control form-control-lg\" name=\"status\"\r\n                            value ={this.state.status}\r\n                            onChange = {this.onChange}>\r\n                                <option value=\"\">Select Status</option>\r\n                                <option value=\"PENDING\">PENDING</option>\r\n                                <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                                <option value=\"DONE\">DONE</option>\r\n                            </select>\r\n                        </div>\r\n\r\n                        <input type=\"submit\" className=\"btn btn-primary btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        )\r\n    }\r\n}\r\nUpdateProjectTask.propTypes = {\r\n    getProjectTask: PropTypes.func.isRequired,\r\n    project_task: PropTypes.object.isRequired, \r\n    errors: PropTypes.object.isRequired,\r\n    updateProjectTask: PropTypes.func.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    project_task: state.backlog.project_task,\r\n    errors: state.errors\r\n})\r\nexport default connect (mapStateToProps, {getProjectTask, updateProjectTask} ) (UpdateProjectTask);","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n    componentDidMount() {\r\n        if (this.props.security.validToken) {\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n      }\r\n    render() {\r\n        return (\r\n            <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-12 text-center\">\r\n                        <h1 className=\"display-3 mb-4\">Personal Project Manager</h1>\r\n                        <p className=\"lead\">\r\n                            Create your account to start you own project\r\n                        </p>\r\n                        <hr />\r\n                        <Link to =\"/signup\" className=\"btn btn-lg btn-primary mr-2\">\r\n                            Sign Up\r\n                        </Link>\r\n                        <Link to =\"/signin\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                            Login\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n        )\r\n    }\r\n}\r\n\r\nLanding.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n  };\r\n  \r\n  const mapStateToProps = state => ({\r\n    security: state.security\r\n  });\r\n\r\nexport default connect(mapStateToProps) (Landing);","import React, { Component } from 'react';\r\nimport {createNewUser} from \"../../actions/SecurityActions\"; \r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass SignUp extends Component {\r\n    constructor (){\r\n        super()\r\n        this.state= {\r\n            \"username\": \"\",\r\n\t        \"fullName\": \"\",\r\n\t        \"password\": \"\",\r\n\t        \"confirmPassword\": \"\",\r\n            errors:{}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.security.validToken) {\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n      }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors: nextProps.errors})\r\n        }\r\n     }\r\n\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const newUser = {\r\n            username:this.state.username,\r\n            fullName: this.state.fullName,\r\n\t        password: this.state.password,\r\n\t        confirmPassword: this.state.confirmPassword\r\n        }\r\n        this.props.createNewUser(newUser, this.props.history)\r\n    }\r\n\r\n    render() {\r\n        const {errors} = this.state;\r\n        return (\r\n            <div className=\"register\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-8 m-auto\">\r\n                    <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n                    <p className=\"lead text-center\">Create your Account</p>\r\n                    <form onSubmit = {this.onSubmit}>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className={classnames(\"form-control form-control-lg \", {\"is-invalid\":errors.fullName})} placeholder=\"Full Name\" name=\"fullName\" value ={this.state.fullName} onChange = {this.onChange}\r\n                                />\r\n                                {errors.fullName && <div className=\"invalid-feedback\">{errors.fullName}</div>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"text\" className={classnames(\"form-control form-control-lg \", {\"is-invalid\":errors.username})} placeholder=\"Email Address (username)\" name=\"username\" onChange = {this.onChange}\r\n                            value ={this.state.username} />\r\n                            {errors.username && <div className=\"invalid-feedback\">{errors.username}</div>}\r\n\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"password\" className={classnames(\"form-control form-control-lg \", {\"is-invalid\":errors.password})} placeholder=\"Password\" name=\"password\" onChange = {this.onChange}\r\n                            value ={this.state.password}/>\r\n                            {errors.password && <div className=\"invalid-feedback\">{errors.password}</div>}\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input type=\"password\" className={classnames(\"form-control form-control-lg \", {\"is-invalid\":errors.confirmPassword})} placeholder=\"Confirm Password\"\r\n                                name=\"confirmPassword\" value ={this.state.confirmPassword}\r\n                                onChange = {this.onChange}/>\r\n                                {errors.confirmPassword && <div className=\"invalid-feedback\">{errors.confirmPassword}</div>}\r\n                        </div>\r\n                        <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nSignUp.propTypes = {\r\n    createNewUser: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    security: state.security,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, {createNewUser}) (SignUp);","import React, { Component } from 'react';\r\nimport {login} from \"../../actions/SecurityActions\"; \r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass SignIn extends Component {\r\n    constructor (){\r\n        super()\r\n        this.state= {\r\n            \"username\": \"\",\r\n\t        \"password\": \"\",\r\n             errors:{}\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.security.validToken) {\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n      }\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.security.validToken){\r\n            this.props.history.push(\"/dashboard\");\r\n        }\r\n\r\n        if(nextProps.errors){\r\n            this.setState({errors: nextProps.errors})\r\n        }\r\n     }\r\n    onChange(e){\r\n        this.setState({[e.target.name]:e.target.value})\r\n    }\r\n\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n\r\n        const loggedRequest = {\r\n            username:this.state.username,\r\n\t        password: this.state.password\r\n        }\r\n        this.props.login(loggedRequest)\r\n    }\r\n    \r\n    render() {\r\n        const {errors} = this.state;\r\n        return (\r\n            <div className=\"login\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 m-auto\">\r\n                        <h1 className=\"display-4 text-center\">Log In</h1>\r\n                        <form onSubmit = {this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"text\" className={classnames(\"form-control form-control-lg \", {\"is-invalid\":errors.username})} placeholder=\"Email Address\" name=\"username\"\r\n                                value ={this.state.username} onChange = {this.onChange} />\r\n                                {errors.username && <div className=\"invalid-feedback\">{errors.username}</div>}\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <input type=\"password\" className={classnames(\"form-control form-control-lg \", {\"is-invalid\":errors.password})} placeholder=\"Password\" name=\"password\"\r\n                                value ={this.state.password} onChange = {this.onChange}/>\r\n                                {errors.password && <div className=\"invalid-feedback\">{errors.password}</div>}\r\n                            </div>\r\n                            <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\nSignIn.propTypes = {\r\n    login: PropTypes.func.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    security: state.security,\r\n    errors: state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})  (SignIn);","import React from 'react';\r\nimport {Route, Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\n\r\nconst SecuredRoute = ({component:Component, security, ...otherProps }) => (\r\n    <Route {...otherProps} render= {props => security.validToken ===true?(<Component {...props}/>):\r\n    (<Redirect to =\"/signin\"/>)\r\n}/>\r\n)\r\n\r\nSecuredRoute.propTypes = {\r\n    security: PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = state =>({\r\n    security: state.security\r\n})\r\n\r\nexport default connect(mapStateToProps) (SecuredRoute)","import React from 'react';\r\nimport './App.css';\r\nimport DashBoard from './components/DashBoard';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport Header from './components/layout/Header';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport AddProject from './components/project/AddProject'\r\nimport {Provider} from 'react-redux';\r\nimport store from './store'\r\nimport updateProject from './components/project/updateProject';\r\nimport ProjectBoard from './components/ProjectBoard/ProjectBoard';\r\nimport AddProjectTask from './components/ProjectBoard/ProjectTask/AddProjectTask';\r\nimport UpdateProjectTask from './components/ProjectBoard/ProjectTask/UpdateProjectTask'\r\nimport Landing from './components/layout/Landing';\r\nimport SignUp from './components/userManagement/SignUp';\r\nimport SignIn from './components/userManagement/SignIn';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setJwtToken from \"./securityutils/setJwtToken\";\r\nimport { SET_CURRENT_USER } from './actions/types';\r\nimport {logout} from \"./actions/SecurityActions\";\r\nimport SecuredRoute from \"./securityutils/SecuredRoute\"\r\n\r\nconst JwtToken = localStorage.JwtToken;\r\nif(JwtToken){\r\n  setJwtToken(JwtToken);\r\n  const decoded_token = jwt_decode(JwtToken);\r\n  store.dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: decoded_token\r\n  })\r\n\r\n  const currentTime = Date.now()/1000;\r\n  if(decoded_token.exp < currentTime){\r\n    store.dispatch(logout());\r\n    window.location.href = \"/\";\r\n  } \r\n\r\n}\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n    <Router>\r\n    <div className=\"App\">\r\n      <Header />\r\n      <Route exact path = \"/\" component = {Landing}/>\r\n      <Route exact path = \"/signup\" component = {SignUp}/>\r\n      <Route exact path = \"/signin\" component = {SignIn}/>\r\n\r\n\r\n      <Switch>\r\n      <SecuredRoute exact path=\"/dashboard\" component={DashBoard} />\r\n      <SecuredRoute exact path=\"/addProject\" component={AddProject} />\r\n      <SecuredRoute exact path=\"/updateproject/:id\" component={updateProject} />\r\n      <SecuredRoute exact path=\"/projectBoard/:id\" component = {ProjectBoard}/>\r\n      <SecuredRoute exact path=\"/addProjectTask/:id\" component = {AddProjectTask}/>\r\n      <SecuredRoute exact path=\"/updateProjectTask/:backlog_id/:pt_sequence\" \r\n      component = {UpdateProjectTask}/>\r\n      </Switch>\r\n    </div>\r\n  </Router>\r\n  </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}